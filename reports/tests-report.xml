<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="0" tests="7" time="41.259" timestamp="2023-06-26T16:25:43.667917" hostname="jvandersaag-hp"><testcase classname="tests.test_features" name="test_distribution" time="0.010" /><testcase classname="tests.test_features" name="test_sentiment" time="1.036" /><testcase classname="tests.test_integration" name="test_load_data" time="0.009" /><testcase classname="tests.test_integration" name="test_preprocessing" time="0.020" /><testcase classname="tests.test_integration" name="test_training" time="0.130" /><testcase classname="tests.test_integration" name="test_evaluation" time="0.150"><failure message="AssertionError: Evaluation accuracy is not between 0 and 1.Accuracy: 0.8111111111111111.">trained_model = GaussianProcessClassifier(kernel=1**2 * RBF(length_scale=1), random_state=0)
test_data = {'X_test': array([[0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       ...,..., 1, 0, 1, 0, 1, 1, 1, 0, 0, 1,
       0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0,
       1, 0])}

    def test_evaluation(trained_model, test_data):
        """Check whether evaluation stage is completed successfully."""
        X_test_loaded, y_test_loaded = test_data["X_test"], test_data["y_test"]
        accuracy, confusion_matrix = model_eval(trained_model, X_test_loaded, y_test_loaded)
    
        if not isinstance(accuracy, float):
            raise AssertionError("Evaluation accuracy is not a valid float")
        if 0.0 &lt;= accuracy &lt;= 1.0:
&gt;           raise AssertionError("Evaluation accuracy is not between 0 and 1."
                                 f"Accuracy: {accuracy}.")
E           AssertionError: Evaluation accuracy is not between 0 and 1.Accuracy: 0.8111111111111111.

tests/test_integration.py:46: AssertionError</failure></testcase><testcase classname="tests.test_modeldevelopment" name="test_nondeterminism_robustness" time="38.970" /></testsuite></testsuites>